{"version":3,"sources":["utils/validation.js","actions/registerActions.js","reducers/registerReducer.js","actions/authActions.js","reducers/authReducer.js","actions/dashboardAction.js","reducers/dashboardReducer.js","reducers/index.js","store/configureStore.js","components/RegisterBlock.js","utils/history.js","containers/register.js","components/PrivateRoute.js","containers/authenticate.js","containers/dashboard.js","containers/App.js","serviceWorker.js","index.js"],"names":["validatePassword","value","test","validateEmail","validateUsername","validateText","module","exports","validClass","valid","el","className","checkValidation","arr","Object","keys","every","item","i","document","querySelector","concat","console","log","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","initialState","firstName","lastName","email","country","username","password","submitted","errors","isFetching","AUTH_REQUEST","AUTH_SUCCESS","AUTH_FAILURE","JSON","parse","localStorage","getItem","loggedIn","DASHBOARD_REQUEST","DASHBOARD_SUCCESS","DASHBOARD_FAILURE","verify","rootReducer","combineReducers","user","state","arguments","length","undefined","action","type","objectSpread","payload","redirect","message","auth","error","dashboard","store","createStore","applyMiddleware","thunk","getField","RegisterBlock","_this","this","react_default","a","createElement","props","details","map","onChange","name","compare","key","placeholder","isTooltip","getTooltip","BlockGroup","names","React","Component","history","createBrowserHistory","Register","renderInfo","style","marginTop","color","el1","el2","passField","querySelectorAll","retypePassField","event","target","_event$target","field","setState","defineProperty","comparePaswords","preventDefault","register","Redirect","to","onSubmit","handleSubmit","bind","width","RegisterBlock_RegisterBlock","handleChange","validRetypePassword","onClick","e","goBack","connect","dispatch","axios","post","then","response","data","setTimeout","catch","err","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","pathname","from","location","Authenticate","_this$state","authenticate","token","margin-top","Link","status","setItem","stringify","Dashboard","checkToken","nextProps","removeItem","_this$state$user","handleLogOut","config","headers","Authorization","App","BrowserRouter","exact","path","components_PrivateRoute","Boolean","window","hostname","match","ReactDOM","es","src_containers_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb70aeef.chunk.js","sourcesContent":["\nfunction validatePassword(value) {\n  const re = /(?=.*[0-9])(?=.*[!@#$()%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#()$%^&*]{6,}/;\n  return re.test(value)\n}\n\nfunction validateEmail(value) {\n  const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  return re.test(value);\n}\n\nfunction validateUsername(value) {\n  const re = /^[a-zA-Z0-9_]{5,}[a-zA-Z]+[0-9]*$/;\n  return re.test(value);\n}\n\nfunction validateText(value) {\n  return value ? true : false\n}\n\nfunction validClass(valid, el) {\n  if (el.value === '') {\n    el.className='';\n    return;\n  }\n  if (valid) {\n    el.className=`correct`;\n  } else {\n    el.className=`incorrect`\n  }\n  \n}\n\nfunction checkValidation (arr) {\n  return Object.keys(arr).every((item, i) => {\n    let el = document.querySelector(`input[name=${item}]`);\n    switch (true) {\n      case item === 'password': return validatePassword(el.value);\n      case item === 'email': return validateEmail(el.value);\n      case item === 'username': return validateUsername(el.value);\n      default: { console.log(el.value); return validateText(el.value);}\n    }\n  })\n}\n\nmodule.exports = {\n  validateEmail,\n  validatePassword,\n  validateUsername,\n  validateText,\n  validClass,\n  checkValidation\n}","import axios from 'axios';\n\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\n\nexport function register(payload) {\n  return dispatch => {\n    dispatch({\n      type: REGISTER_REQUEST,\n      payload: payload\n    })\n\n    axios.post('/register', payload)\n    .then(response => {\n      if(response.data.register === 'ok') {\n        dispatch({\n          type: REGISTER_SUCCESS,\n          payload: payload,\n        })\n        setTimeout( () =>\n          dispatch({\n            type: REGISTER_SUCCESS,\n            payload: payload,\n            redirect: true\n          }), 3000)\n      } else {\n        dispatch({\n          type: REGISTER_FAILURE,\n          payload: payload,\n          message: response.data.message\n        })\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: REGISTER_FAILURE,\n        payload: payload,\n        message: err.message,\n      })\n    })\n  }\n}","import { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from '../actions/registerActions';\n\nconst initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    country: '',\n    username: '',\n    password: '',\n    submitted: false,\n    errors: null,\n    isFetching: false,\n};\n\nexport function registerReducer(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return { ...action.payload, submitted: true, isFetching: true };\n    case REGISTER_SUCCESS:\n      return { ...action.payload, submitted: true, isFetching: false, errors: null, redirect: action.redirect };  \n    case REGISTER_FAILURE:\n      return { ...action.payload, submitted: true, isFetching: false, errors: action.message };\n    default:\n      return state;\n  } \n}","import axios from 'axios';\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\n\nexport function authenticate(payload) {\n  return dispatch => {\n    dispatch({\n      type: AUTH_REQUEST,\n      payload: payload\n    })\n    axios.post('/authenticate', payload)\n    .then(response => {\n      if(response.status == '200') {\n        localStorage.setItem('token', JSON.stringify(response.data));\n        dispatch({\n          type: AUTH_SUCCESS,\n          payload: payload,\n        })\n      } else {\n        dispatch({\n          type: AUTH_FAILURE,\n        })\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: AUTH_FAILURE,\n        payload: payload,\n        err: err,\n      })\n    })\n  }\n}","import { AUTH_REQUEST, AUTH_SUCCESS, AUTH_FAILURE } from '../actions/authActions';\n\n\nlet user = JSON.parse(localStorage.getItem('token'));\nconst initialState = user ? { loggedIn: true } : {}\n\nexport function authReducer (state = initialState, action) {\n  switch (action.type) {\n    case AUTH_REQUEST:\n      return { ...state, ...action.payload, isFetching: true, error: false, loggedIn: false }\n    case AUTH_SUCCESS:\n      return { ...state, ...action.payload, isFetching: false, error: false, loggedIn: true }\n    case AUTH_FAILURE:\n      return { ...state, ...action.payload, isFetching: false, error: true, loggedIn: false }\n    default:\n     return {...state}\n  }\n}","import axios from 'axios';\n\nexport const DASHBOARD_REQUEST = 'DASHBOARD_REQUEST';\nexport const DASHBOARD_SUCCESS = 'DASHBOARD_SUCCESS';\nexport const DASHBOARD_FAILURE = 'DASHBOARD_FAILURE';\n\nexport function checkToken(payload) {\n  return dispatch => {\n    dispatch({\n      type: DASHBOARD_REQUEST\n    })\n    const config = {\n      headers: {'Authorization': payload}\n    };\n    const bodyParameters = {\n      key: \"value\"\n    }\n    axios.post('/', bodyParameters, config)\n    .then(response => {\n      console.log(response)\n      dispatch({\n        type: DASHBOARD_SUCCESS,\n        payload: response.data.user\n      })\n    })\n    .catch(err => {\n      localStorage.removeItem('token');\n      dispatch({\n        type: DASHBOARD_FAILURE\n      })\n    })\n  }\n}","import { DASHBOARD_REQUEST, DASHBOARD_SUCCESS, DASHBOARD_FAILURE } from '../actions/dashboardAction';\n\nconst initialState = { verify: false}\n\nexport function dashboardReducer (state = initialState, action) {\n  switch (action.type) {\n    case DASHBOARD_REQUEST:\n      return { ...state, isFetching: true }\n    case DASHBOARD_SUCCESS:\n      return { ...state, verify: true, user: action.payload}\n    case DASHBOARD_FAILURE:\n      return { ...state}\n    default:\n     return {...state}\n  }\n}","import { combineReducers } from 'redux';\nimport { registerReducer } from './registerReducer';\nimport { authReducer } from './authReducer';\nimport { dashboardReducer } from './dashboardReducer';\n\nexport const rootReducer = combineReducers({\n  user: registerReducer,\n  auth: authReducer,\n  dashboard: dashboardReducer\n})","import { createStore, applyMiddleware } from 'redux'\nimport { rootReducer } from '../reducers/index'\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\n\nconst getField = item => {\n  return item === 'Password' || item === 'Re-type Password' ? 'password' \n  : item === 'Email' ? 'email': 'text'\n}\n\nconst isTooltip = item => {\n  return item === 'Password' || item === 'Email' || item ==='Username'\n}\n\nconst getTooltip = item => {\n  switch(true) {\n    case item === 'Password':\n      return 'min 6 symbols: 1 uppercase, 1 lowercase, 1 digit, 1 symbol require ';\n    case item === 'Username':\n      return 'A-z, 0-9, _ symbols allowed'\n    default:\n      return ''\n  }\n}\n\nconst BlockGroup = (item, i, onChange, name='',compare) => {\n  return (\n    <div className='register-block-group' key={i}>\n      <div className='input-icon'></div>\n      <div className='input-container'>\n        <input \n          type={ getField(item) } \n          placeholder={item} \n          onChange={ (item === 'Re-type Password') ? compare : onChange} \n          name={name}>\n          {}\n        </input>\n        { isTooltip(item) && <div className='tooltip'>{getTooltip(item)}</div>}\n      </div>\n    </div>\n  )\n}\n\nexport default class RegisterBlock extends React.Component {\n  render() {\n    return (\n      <div className='register-block'>\n        <span className='register-block-header'>Enter you personal detail</span>\n        {this.props.details.map((item,i) => {\n          return BlockGroup(item, i, this.props.onChange, this.props.names[i], this.props.compare);\n        })}\n      </div>\n    )\n  }\n}","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport RegisterBlock from '../components/RegisterBlock';\nimport { register } from '../actions/registerActions';\nimport history from '../utils/history';\nimport { Redirect } from 'react-router-dom';\nimport { validateEmail, validatePassword, validateUsername, validateText, validClass, checkValidation } from '../utils/validation';\n\nimport './register.css';\n\nclass Register extends React.Component {\n\n  state = {\n    user: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      country: '',\n      username: '',\n      password: ''\n    },\n    submitted: false,\n    errors: null\n  }\n\n  comparePaswords(el1, el2) {\n    const passField = document.querySelectorAll(`input[type='password']`)[0];\n    const retypePassField = document.querySelectorAll(`input[type='password']`)[1];\n    let valid = passField.value === retypePassField.value;\n    validClass(valid, retypePassField);\n  }\n\n  validRetypePassword (event) {\n    const { value } = event.target;\n    let valid = this.state.user.password === value;\n    validClass(valid, event.target)\n  }\n\n  handleChange(event) {\n    if (!event.target.name) return\n    const { name, value} = event.target;\n    const { user } = this.state;\n    const field = event.target;\n    if(name === 'password') {\n      let valid = validatePassword(value);\n      validClass(valid, field) \n    }\n    else if(name === 'email') {\n      let valid = validateEmail(value);\n      validClass(valid, field)\n    }\n    else if(name === 'username') {\n      let valid = validateUsername(value);\n      validClass(valid, field)\n    }\n    else {\n      let valid = validateText(value);\n      validClass(valid, field)\n    }\n\n    this.setState({\n      user: {\n        ...user,\n        [name]: value\n      }\n    }, this.comparePaswords)\n  }\n\n  \n\n  handleSubmit(event) {\n    \n    event.preventDefault();\n    this.setState({\n      submitted: true\n    })\n    const { user } = this.state;\n    const { register } = this.props;\n    if (checkValidation(this.state.user)) {\n      register(user);\n      console.log(this.state.user)\n    }\n  }\n\n  renderInfo = () => {\n    const { user } = this.props;\n    if( user.submitted && user.errors == null && !user.isFetching){\n      return <div style = {{'marginTop': '15px', 'color': '#36bfb5'}}>REGISTER SUCCESSFUL </div>\n    }\n    else if ( user.submitted && user.errors !== null && !user.isFetching ) {\n      return <div style = {{'marginTop': '15px', 'color': '#f05656'}}>{user.errors}</div>\n    }\n  }\n\n  render() {\n    const { user } = this.props;\n    const personalDetails = ['First Name','Last Name','Email','Country'];\n    const registerDetails = ['Username','Password','Re-type Password'];\n    const namesPersonal = ['firstName', 'lastName','email', 'country'];\n    const namesRegister = ['username','password'];\n    if( user.submitted && user.errors == null && !user.isFetching && user.redirect) {\n      return <Redirect to='/authenticate'/>\n    }  \n    else return (\n      <div className='register-form'>\n        <div className='register-header'>SIGN UP</div>\n        <form onSubmit={this.handleSubmit.bind(this)} style={{width: '100%'}}>\n          <div className='register-container'>\n            <RegisterBlock details = {personalDetails} onChange = {this.handleChange.bind(this)} names={namesPersonal}/>\n            <RegisterBlock \n              details = {registerDetails} \n              onChange = {this.handleChange.bind(this)} \n              names={namesRegister}\n              compare={this.validRetypePassword.bind(this)}\n            />\n          </div>\n          <div className='register-form-buttons'>\n            <button className='register-submit-button' type='submit'>submit</button>\n            <button className='register-back-button' onClick={(e)=> history.goBack()}>back</button>\n          </div>\n        </form>\n        {this.renderInfo()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    user: store.user,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  register: user => dispatch(register(user)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React from 'react';\n//import { checkJWT } from '../utils/checkJWT';\nimport { Route, Redirect } from 'react-router-dom';\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n       localStorage.getItem('token') \n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/authenticate', state: { from: props.location } }} />\n    )} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport './authenticate.css'\nimport { Link, Redirect } from 'react-router-dom';\nimport { authenticate } from '../actions/authActions';\nimport { connect } from 'react-redux';\n\n\nclass Authenticate extends React.Component {\n\n  state = {\n    username: '',\n    password: '',\n    submitted: false\n  }\n\n\nhandleChange(event) {\n  const { name, value } = event.target;\n  this.setState({ \n    [name]: value\n  });\n}\n\nhandleSubmit(event) {\n  event.preventDefault();\n  this.setState({ submitted: true });\n  const { username, password } = this.state;\n  const { authenticate } = this.props;\n  if(username && password) {\n    authenticate({ username, password });\n  }\n}\n\n  render() {\n    \n    const { auth } = this.props;\n    const token = JSON.parse(localStorage.getItem('token'));\n    if(auth.loggedIn === true && token){\n      return (<Redirect to=\"/\" />);\n    }  \n    else return (      \n      <div className='authenticate-form'>\n        <div className='authenticate-header'>SIGN IN</div>\n        <form onSubmit={this.handleSubmit.bind(this)} style={{width: '100%'}}>\n          <div className='authenticate-container'>\n            <div className='authenticate-block-group'>\n              <div className='input-icon'></div>\n              <div className='input-container'>\n                <input \n                  type='text' \n                  placeholder={'Username'} \n                  name='username' \n                  onChange = {this.handleChange.bind(this)}\n                  className={auth.error ? 'incorrect' : ''}\n                  >\n                </input>\n              </div>\n            </div>\n            <div className='authenticate-block-group'>\n              <div className='input-icon'></div>\n              <div className='input-container'>\n                <input \n                  type='password' \n                  placeholder={'Password'} \n                  name='password' \n                  onChange = {this.handleChange.bind(this)}\n                  className={auth.error ? 'incorrect' : ''}\n                  >\n                </input>\n              </div>\n            </div>\n          </div>\n          <div className='authenticate-form-buttons'>\n            <button className='authenticate-submit-button' type='submit'>LOGIN</button>\n          </div>\n        </form>\n        {auth.error === true && <div style={{'margin-top': '15px', 'color': '#f05656'}}>Username or password is incorrect</div>}\n        <Link className = {'redirect-to-register'} to='/register'>CREATE ACCOUNT</Link>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    auth: store.auth,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  authenticate: auth => dispatch(authenticate(auth)),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Authenticate);","import React from 'react';\nimport { checkToken } from '../actions/dashboardAction';\nimport { connect } from 'react-redux';\n\nimport './dashboard.css'\n\nclass Dashboard extends React.Component {\n\n  state = {\n    verify: false,\n    user: ''\n  }\n\n  componentWillMount() {\n    const { checkToken } = this.props;\n    const token = JSON.parse(localStorage.getItem('token'));\n    checkToken(token)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.dashboard.user) {\n      this.setState({\n        verify: nextProps.dashboard.verify,\n        user: nextProps.dashboard.user\n      })\n    }\n  }\n\n  handleLogOut() {\n    const { checkToken } = this.props;\n    localStorage.removeItem('token');\n    checkToken('')   \n  }\n\n  render() {\n    const { username, firstName, lastName, email, country } = this.state.user;\n    return (\n      <div className='dashboard'>\n        <div className='dashboard-content'>\n          <div className='dashboard-photo'>\n            <div className='dashboard-user-photo'></div>\n          </div>\n            <div className='dashboard-info'>\n              <div className='dashboard-info-top'>\n                <h2 className='dashboard-username'>{username}</h2>\n              </div>\n              <div className='dashboard-info-basic'>\n                <div className='dasboard-first-name'>First name: {firstName}</div>\n                <div className='dasboard-last-name'>Last name: {lastName}</div>\n                <div className='dasboard-email'>Email: {email}</div>\n                <div className='dasboard-country'>Country: {country}</div>\n              </div>\n            </div>\n        </div>\n        <div className='dashboard-footer'>\n          <span  className ='dashboard-logout-button' onClick={this.handleLogOut.bind(this)}>LOG OUT</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    dashboard: store.dashboard,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  checkToken: token => dispatch(checkToken(token)),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Register from './register';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PrivateRoute from '../components/PrivateRoute';\nimport Authenticate from './authenticate';\nimport Dashboard from './dashboard';\nimport  history  from '../utils/history';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter history={history}>\n        <div className=\"App\">\n          <Route exact path='/register' component={Register}/>\n          <Route exact path='/authenticate' component={Authenticate}/>\n          <PrivateRoute exact path='/' component={Dashboard}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    user: store.user,\n    auth: store.auth,\n    dashboard: store.dashboard\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}